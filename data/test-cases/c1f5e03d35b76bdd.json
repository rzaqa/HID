{"uid":"c1f5e03d35b76bdd","name":"id_013","fullName":"hid_tests.tests.test_hash.TestHashFiles#test_hashes_generated_for_all_files","historyId":"2bb60585946ae3ce8466112eced29208","time":{"start":1755853258329,"stop":1755853258582,"duration":253},"status":"skipped","statusMessage":"XFAIL Known bug id_hash_004: Duplicate log lines from read_log_line()\n\nAssertionError: Expected 2 hashes, but got 7\nassert 7 == 2\n +  where 7 = len([PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), ...])\n +  and   2 = len([PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt')])","statusTrace":"self = <hid_tests.tests.test_hash.TestHashFiles object at 0x7f8cf33b2e40>\n\n    @pytest.mark.xfail(reason=\"Known bug id_hash_004: Duplicate log lines from read_log_line()\")\n    @allure.title(\"id_013\")\n    def test_hashes_generated_for_all_files(self):\n        hash_wrapper.init_library()\n        try:\n            op_id = hash_wrapper.start_hashing(str(self.samples_dir))\n            _wait_done(op_id, timeout_s=10)\n    \n            lines = []\n            while True:\n                try:\n                    line = hash_wrapper.read_log_line()\n                except RuntimeError as e:\n                    if \"error code 1\" in str(e).lower():\n                        break\n                    raise\n                if line is None:\n                    break\n                lines.append(line)\n    \n            expected_files = sorted(f.resolve() for f in self.samples_dir.iterdir() if f.is_file())\n            found_files = sorted(Path(line.split()[1]).resolve() for line in lines)\n    \n>           assert len(found_files) == len(expected_files), (\n                f\"Expected {len(expected_files)} hashes, but got {len(found_files)}\"\n            )\nE           AssertionError: Expected 2 hashes, but got 7\nE           assert 7 == 2\nE            +  where 7 = len([PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), ...])\nE            +  and   2 = len([PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt')])\n\nhid_tests/tests/test_hash.py:216: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestHashFiles","time":{"start":1755853258329,"stop":1755853258329,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL Known bug id_hash_004: Duplicate log lines from read_log_line()\n\nAssertionError: Expected 2 hashes, but got 7\nassert 7 == 2\n +  where 7 = len([PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), ...])\n +  and   2 = len([PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt')])","statusTrace":"self = <hid_tests.tests.test_hash.TestHashFiles object at 0x7f8cf33b2e40>\n\n    @pytest.mark.xfail(reason=\"Known bug id_hash_004: Duplicate log lines from read_log_line()\")\n    @allure.title(\"id_013\")\n    def test_hashes_generated_for_all_files(self):\n        hash_wrapper.init_library()\n        try:\n            op_id = hash_wrapper.start_hashing(str(self.samples_dir))\n            _wait_done(op_id, timeout_s=10)\n    \n            lines = []\n            while True:\n                try:\n                    line = hash_wrapper.read_log_line()\n                except RuntimeError as e:\n                    if \"error code 1\" in str(e).lower():\n                        break\n                    raise\n                if line is None:\n                    break\n                lines.append(line)\n    \n            expected_files = sorted(f.resolve() for f in self.samples_dir.iterdir() if f.is_file())\n            found_files = sorted(Path(line.split()[1]).resolve() for line in lines)\n    \n>           assert len(found_files) == len(expected_files), (\n                f\"Expected {len(expected_files)} hashes, but got {len(found_files)}\"\n            )\nE           AssertionError: Expected 2 hashes, but got 7\nE           assert 7 == 2\nE            +  where 7 = len([PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt'), ...])\nE            +  and   2 = len([PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/a.txt'), PosixPath('/home/runner/work/HID/HID/hid_tests/data/samples/positive/two_files/b.txt')])\n\nhid_tests/tests/test_hash.py:216: AssertionError","steps":[],"attachments":[{"uid":"a2a7c5855ccdb00f","name":"stdout","source":"a2a7c5855ccdb00f.txt","type":"text/plain","size":574}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_xunit_setup_method_fixture_TestHashFiles::0","time":{"start":1755853258591,"stop":1755853258591,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"functional"},{"name":"parentSuite","value":"hid_tests.tests"},{"name":"suite","value":"test_hash"},{"name":"subSuite","value":"TestHashFiles"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2202-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"hid_tests.tests.test_hash"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["functional"]},"source":"c1f5e03d35b76bdd.json","parameterValues":[]}